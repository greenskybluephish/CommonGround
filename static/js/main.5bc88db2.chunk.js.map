{"version":3,"sources":["components/nav/NavBar.js","components/home/Home.js","modules/APIManager.js","components/artists/ArtistCard.js","components/playlist/TopArtists.js","components/authentication/Login.js","components/artists/PlaylistCard.js","components/share/Shared.js","components/weather/Weather.js","components/ApplicationViews.js","App.js","index.js"],"names":["NavBar","state","value","isOpen","handleChange","event","_this","setState","target","handleSubmit","sessionStorage","clear","localStorage","toggle","react_default","a","createElement","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","NavbarToggler","onClick","this","Collapse","navbar","Nav","NavItem","NavLink","Component","Home","Container","props","currentUser","baseURL","APIManager","get","spotifyTopArtists","_spotifyTopArtists","Object","asyncToGenerator","regenerator_default","mark","_callee","access_token","res","page","artists","artistArray","wrap","_context","prev","next","fetch","concat","headers","Accept","Authorization","Content-Type","sent","json","items","map","artist","name","artistId","id","image","images","url","abrupt","stop","_x","apply","arguments","spotifyArtistsInfo","_spotifyArtistsInfo","_callee2","uri","_context2","_x2","_x3","spotifyUserDevices","_spotifyUserDevices","_callee3","data","deviceJSON","deviceList","phone","_context3","devices","undefined","find","d","type","_x4","_x5","transferPlayback","_transferPlayback","_callee4","deviceId","_context4","body","JSON","stringify","device_ids","method","_x6","_x7","_x8","startPhonePlayback","playlist","context_uri","JSONArtistDetail","_JSONArtistDetail","_callee5","user","userObject","mappedArtist","_context5","artistDetail","_x9","JSONUsers","_JSONUsers","_callee6","resArray","_context6","SpotifyRecs","_SpotifyRecs","_callee7","prom","response","data1","uriArray","_context7","tracks","elem","join","_x10","_x11","post","toJSONServer","_toJSONServer","_callee8","endpoint","objectToPost","e","_context8","_x12","_x13","postPlaylistTracks","_postPlaylistTracks","_callee9","uris","_context9","_x14","_x15","_x16","createPlaylist","_createPlaylist","_callee10","playlistName","_context10","public","_x17","_x18","_x19","ArtistCard","popoverOpen","tweener","className","src","alt","Button","slice","TopArtists","_this2","userId","getItem","API","then","object","ArtistCard_ArtistCard","key","Login","oauthScript","document","appendChild","preventDefault","authenticateUser","history","push","handleClick","bind","size","bg-color","withRouter","PlaylistCard","removeArtist","Shared","active","second","shared","onlyActive","onlySecond","sharedArtists","filter","art","getElementById","firstChild","textContent","makePlaylist","spotifyId","artistsForPlaylist","p","Promise","all","promise","length","parentNode","classList","add","previousSibling","artistObject","artObject","setTimeout","console","log","remove","newState","secondUser","array","_this3","Row","PlaylistCard_PlaylistCard","Scanner","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","delay","result","handleScan","assertThisInitialized","err","error","Number","isInteger","parseInt","secondUserAdd","lib_default","style","height","width","onError","handleError","onScan","facingMode","ApplicationViews","isLoggedIn","allUsers","isAuthenticated","window","OAuth","initialize","popup","cache","done","spotify","setItem","me","registeredUser","username","userList","userArray","Fragment","react_router","exact","path","render","Home_Home","authentication_Login","TopArtists_TopArtists","Weather","Shared_Shared","App","components_nav_NavBar","components_ApplicationViews","ReactDOM","react_router_dom","src_App"],"mappings":"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","file":"static/js/main.5bc88db2.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport \"./NavBar.css\"\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink\r\n} from 'reactstrap';\r\n\r\nclass NavBar extends Component {\r\n  state = {\r\n      value: [],\r\n      isOpen: false\r\n   }\r\n\r\n     handleChange = (event) => {\r\n       this.setState({value: event.target.value});\r\n     }\r\n\r\n     handleSubmit = (event) => {\r\n       sessionStorage.clear(); \r\n       localStorage.clear();  \r\n     }\r\n    \r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n\r\n   render() {\r\n       return (\r\n        <div>\r\n           <Navbar color=\"#464EA3\" dark expand=\"md\">\r\n               <NavbarBrand tag={Link} to=\"/\">Common Ground</NavbarBrand>\r\n               <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n          <Nav navbar>\r\n          <NavItem>\r\n                <NavLink tag={Link} to=\"/\">Home</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/topartists\">Top Artists</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/shared\">Share</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/weather\">Weather</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                   <NavLink onClick={this.handleSubmit} tag={Link} to=\"/login\">Log Out</NavLink>\r\n              </NavItem>\r\n               </Nav>\r\n               </Collapse>\r\n           </Navbar>\r\n           </div>\r\n       )\r\n   }\r\n}\r\n\r\nexport default NavBar","import React, { Component } from \"react\";\r\nimport \"./home.css\";\r\nimport {\r\n  Container\r\n} from \"reactstrap\";\r\n// import API from \"../../modules/APIManager\"\r\n\r\n\r\n\r\nexport default class Home extends Component {\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n  render() {\r\n    return <Container>\r\n    <h1>Hello {this.props.currentUser}</h1>\r\n    </Container>;\r\n  }\r\n}\r\n","// const accessToken = window.sessionStorage.getItem(\"access_token\");\r\n\r\nconst remoteURL = \"https://api.spotify.com/v1\";\r\nconst baseURL = \"https://calm-mesa-57338.herokuapp.com\";\r\n\r\n// const spotifyHeaders = {\r\n//   headers: {\r\n//     Accept: \"application/json\",\r\n//     Authorization: `Bearer ${accessToken}`,\r\n//     \"Content-Type\": \"application/json\"\r\n//   }\r\n// }\r\n\r\nexport default {\r\n  get: {\r\n    async spotifyTopArtists(access_token) {\r\n      const res = await fetch(`${remoteURL}/me/top/artists?time_range=medium_term&limit=50`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${access_token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n      const page = await res.json();\r\n      let artists = page.items;\r\n      const artistArray = artists.map(artist => {\r\n        const info = {\r\n          name: artist.name,\r\n          artistId: artist.id,\r\n          image: artist.images[1].url\r\n        }\r\n        return info;\r\n      });\r\n\r\n      return artistArray;\r\n    },\r\n    async spotifyArtistsInfo(uri, access_token) {\r\n      const res = await fetch(`https://api.spotify.com/v1/artists?ids=${uri}`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${access_token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n      return await res.json();\r\n    },\r\n    async spotifyUserDevices(access_token, data) {\r\n      const res = await fetch(`https://api.spotify.com/v1/me/player/devices`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${access_token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n      const deviceJSON = await res.json();\r\n      const deviceList = deviceJSON.devices;\r\n      let phone = deviceList.find(d => d.type === \"Smartphone\");\r\n      if (phone === undefined) {\r\n        phone = {\r\n          id: \"e71d096f1cfb06b079f8156048933dbf5ee78350\"\r\n      }\r\n    }\r\n      return [phone.id, data];\r\n    },\r\n    async transferPlayback(deviceId, access_token, data) {\r\n      const res = await fetch(`https://api.spotify.com/v1/me/player`, {\r\n        body: JSON.stringify({\r\n          \"device_ids\": [\r\n            deviceId]\r\n        }), \r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${access_token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"PUT\"\r\n      })\r\n      return [deviceId, data];\r\n    },\r\n\r\n\r\n    startPhonePlayback(deviceId, access_token, playlist) {\r\n      return fetch(`https://api.spotify.com/v1/me/player/play?device_id${deviceId}`, {\r\n        body: JSON.stringify({\r\n          \"context_uri\": `spotify:playlist:${playlist}`\r\n        }), \r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${access_token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"PUT\"\r\n      })\r\n    },\r\n\r\n    async JSONArtistDetail(user) {\r\n      const res = await fetch(`${baseURL}/spotify/${user}`);\r\n      const userObject = await res.json();\r\n      const mappedArtist = userObject.artistDetail\r\n      return mappedArtist;\r\n    },\r\n\r\n    async JSONUsers() {\r\n      const res = await fetch(`${baseURL}/spotify`);\r\n      const resArray = await res.json();\r\n      return resArray;\r\n    },\r\n\r\n    async SpotifyRecs(prom,access_token) {\r\n      const response = await fetch(`https://api.spotify.com/v1/recommendations?limit=20&market=US&seed_artists=${prom}&min_valence=0.5`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${access_token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n      const data1 = await response.json();\r\n      const uriArray = data1.tracks;\r\n      const uri = uriArray.map(elem => {\r\n        return elem.uri;\r\n      });\r\n      return uri.join();\r\n    },\r\n  },\r\n  post: {\r\n    async toJSONServer(endpoint, objectToPost) {\r\n      const e = await fetch(`${baseURL}/${endpoint}`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(objectToPost),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      });\r\n      return await e.json();\r\n    }\r\n  },\r\n\r\n  async postPlaylistTracks(uris, access_token, playlist) {\r\n    const e = await fetch(`https://api.spotify.com/v1/playlists/${playlist}/tracks?uris=${uris}`, {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: `Bearer ${access_token}`,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    method: \"POST\"\r\n  })\r\n  return playlist;\r\n  },\r\n  async createPlaylist(access_token, user, playlistName) {\r\n    const res = await fetch(`https://api.spotify.com/v1/users/${user}/playlists`, {\r\n      body: JSON.stringify({\r\n        name: playlistName,\r\n        public: true\r\n      }),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${access_token}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\"\r\n    });\r\n    const data = await res.json();\r\n    return await data.id;\r\n  },\r\n\r\n\r\n}","import React, { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\n\r\nexport default class ArtistCard extends Component {\r\n  state = {\r\n    popoverOpen: false\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      popoverOpen: !this.state.popoverOpen\r\n    });\r\n  }\r\n  handleSubmit = (event) => {\r\n    this.props.tweener(event)\r\n    }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\" id={this.props.artist.artistId}>\r\n        <div className=\"card-body\">\r\n          <img\r\n            src={this.props.artist.image}\r\n            className=\"card-img\"\r\n            alt=\"Artist\"\r\n          />\r\n            <Button onClick={this.handleSubmit}\r\n              id={\"a\" + this.props.artist.artistId.slice(0, 5)}\r\n              type=\"button\"\r\n            >\r\n              {this.props.artist.name}\r\n            </Button>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./playlist.css\";\r\nimport { Container } from \"reactstrap\";\r\nimport API from \"../../modules/APIManager\";\r\nimport ArtistCard from \"../artists/ArtistCard\";\r\n\r\n\r\nexport default class TopArtists extends Component {\r\n  state = {\r\n    artists: []\r\n  };\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    const userId = sessionStorage.getItem(\"userId\");\r\n\r\n    API.get.JSONArtistDetail(userId)\r\n      .then(object => this.setState({ artists: object}));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <Container className=\"topArtists\">\r\n        <h1>Most Listened to Artists</h1>\r\n        <div className=\"content\">\r\n        {this.state.artists.map(artist => (\r\n          <ArtistCard key={artist.artistId} artist={artist} />\r\n        ))}\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router'\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport { Button, Container } from 'reactstrap';\r\nimport \"./login.css\"\r\n// import API from \"../../modules/APIManager\"\r\n\r\nclass Login extends Component {\r\n\r\n  // Downloads oauth.js from CDN, pretty much like adding external scripts\r\n  componentDidMount () {\r\n    const oauthScript = document.createElement(\"script\");\r\n    oauthScript.src = \"https://cdn.rawgit.com/oauth-io/oauth-js/c5af4519/dist/oauth.js\";\r\n\r\n    document.body.appendChild(oauthScript);\r\n  \r\n  }\r\n\r\n  handleClick(e) {\r\n    // Prevents page reload\r\n    e.preventDefault();\r\n\r\n    // Initializes OAuth.io with API key\r\n    this.props.authenticateUser()\r\n\r\n\r\n      this.props.history.push(\"/home\")\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n    <Container>\r\n    \r\n    <h1>Welcome to Common Ground</h1>\r\n    <h3>Please log in to continue</h3>\r\n    <Button onClick={this.handleClick.bind(this)} size=\"lg\" bg-color=\"#E3E0DA\" >\r\n             <span className=\"fa fa-spotify\"></span> Sign in with Spotify\r\n           </Button>\r\n           </Container>\r\n    )}\r\n}\r\n\r\nexport default withRouter(Login)","import React, { Component } from \"react\";\r\nimport { Col, Button } from \"reactstrap\";\r\n\r\nexport default class PlaylistCard extends Component {\r\n\r\n  handleClick = (event) => {\r\n    this.props.removeArtist(event)\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n    <div className=\"card\" id={this.props.artist.artistId}>\r\n    <div className=\"card-body\">\r\n    <img src={this.props.artist.image}\r\n        className=\"card-img\"\r\n        alt=\"Artist\" />\r\n    <Button name={this.props.artist.artistId} onClick={this.handleClick}>Remove Artist</Button>\r\n\r\n    </div>\r\n  </div>\r\n\r\n    );\r\n\r\n\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./shared.css\";\r\nimport { Button, Row, Container } from \"reactstrap\";\r\nimport API from \"../../modules/APIManager\";\r\nimport ArtistCard from \"../artists/ArtistCard\";\r\nimport { easing, tween, styler } from \"popmotion\";\r\nimport PlaylistCard from \"../artists/PlaylistCard\";\r\n\r\nexport default class Shared extends Component {\r\n  state = {\r\n    active: [],\r\n    second: [],\r\n    shared: [],\r\n    onlyActive: [],\r\n    onlySecond: [],\r\n    playlist: []\r\n  };\r\n\r\n  sharedArtists = (event) => {\r\n    const target = event.target.id\r\n    if (target === \"magic\") {\r\n\r\n    const active = this.state.active;\r\n    const second = this.state.second;\r\n    const shared = active.filter(artist =>\r\n      second.find(art => art.artistId === artist.artistId)\r\n    );\r\n\r\n    const onlyActive = active.filter(\r\n      artist => !second.find(art => art.artistId === artist.artistId)\r\n    );\r\n    const onlySecond = second.filter(\r\n      artist => !active.find(art => art.artistId === artist.artistId)\r\n    );\r\n    this.setState({\r\n      shared: shared,\r\n      onlyActive: onlyActive,\r\n      onlySecond: onlySecond\r\n    });\r\n    document.getElementById(target).firstChild.textContent = \"Make a Playlist\";\r\n    \r\n    event.target.id = \"makePlaylist\";\r\n  } else if (event.target.id === \"makePlaylist\"){\r\n      this.makePlaylist();\r\n    }\r\n  }\r\n  \r\n\r\n  makePlaylist = () => {\r\n    const access_token = sessionStorage.getItem(\"access_token\");\r\n    const spotifyId = sessionStorage.getItem(\"spotifyId\");\r\n    const artistsForPlaylist = this.state.playlist.map(p => p.artistId).join();\r\n    let wait = Promise.all([API.createPlaylist(access_token, spotifyId, \"Demo Day Playlist\"),\r\n    API.get.SpotifyRecs(artistsForPlaylist, access_token)]).then(promise => {\r\n      API.postPlaylistTracks(promise[1], access_token, promise[0]).then(data => {\r\n        API.get.spotifyUserDevices(access_token, data).then(data=> {\r\n          API.get.transferPlayback(data[0], access_token, data[1]).then(data =>{\r\n            API.get.startPhonePlayback(data[0], access_token, data[1]);\r\n          })\r\n      })\r\n    });\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  tweener = event => {\r\n    if (this.state.playlist.length < 5) {\r\n    const target = event.target.parentNode.parentNode;\r\n    target.classList.add(\"outFront\");\r\n    let image = event.target.previousSibling;\r\n    const allArtists = this.state.active.concat(this.state.onlySecond)\r\n    const artistObject = allArtists.find(\r\n      artObject => artObject.artistId === target.id\r\n    );  \r\n\r\n    this.setState({ playlist: this.state.playlist.concat(artistObject) });\r\n    setTimeout(function(){ target.classList.add(\"display-none\")}, 100);\r\n    image.classList.add(\"outFront\");\r\n\r\n  }\r\n  };\r\n\r\n//this.props.secondUser\r\n\r\n  componentDidMount() {\r\n    const userId = sessionStorage.getItem(\"userId\");\r\n\r\n    if (this.props.secondUser == \"\") {\r\n    API.get\r\n      .JSONArtistDetail(userId)\r\n      .then(array => this.setState({ active: array }));\r\n    API.get.JSONArtistDetail(4).then(array => this.setState({ second: array }));\r\n    }\r\n    else {\r\n      API.get\r\n      .JSONArtistDetail(userId)\r\n      .then(array => this.setState({ active: array }));\r\n    API.get.JSONArtistDetail(this.props.secondUser).then(array => this.setState({ second: array }));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.playlist.length === 5) {\r\n\r\n    }\r\n  }\r\n\r\n  removeArtist = (event) => {\r\n    const target = event.target.name;\r\n    console.log(target);\r\n    const addDisplay = document.getElementById(target);\r\n    addDisplay.classList.remove(\"display-none\", \"outFront\");\r\n    const newState = this.state.playlist.filter(artistObject => {\r\n      return artistObject.artistId !== target\r\n    }); this.setState({playlist: newState})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"shared\">\r\n        <h1>Shared Artists</h1>\r\n        <Button id=\"magic\" onClick={this.sharedArtists}>Click to make Magic</Button>\r\n        <Button id=\"makePlaylist\" onClick={this.makePlaylist}>Click to make Magic</Button>\r\n        \r\n        <Row className=\"playlist\">\r\n\r\n          {this.state.playlist.map(artist => (\r\n             <PlaylistCard\r\n                key={artist.artistId}\r\n                artist={artist}\r\n                removeArtist={this.removeArtist}\r\n              />\r\n            ))}\r\n            </Row>\r\n         \r\n          \r\n         \r\n        <div className=\"fixer\">\r\n        <div className=\"container order-sm-1 center \">\r\n            {this.state.shared.map(artist => (\r\n              <ArtistCard\r\n                key={artist.artistId}\r\n                artist={artist}\r\n                tweener={this.tweener}\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"container left\">\r\n            {this.state.onlyActive.map(artist => (\r\n              <ArtistCard\r\n                key={artist.artistId}\r\n                artist={artist}\r\n                tweener={this.tweener}\r\n              />\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"container order-sm-3 right\">\r\n            {this.state.onlySecond.map(artist => (\r\n              <ArtistCard\r\n                key={artist.artistId}\r\n                artist={artist}\r\n                tweener={this.tweener}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport QrReader from 'react-qr-scanner'\r\nimport \"./weather.css\"\r\nimport { withRouter } from 'react-router'\r\n\r\n\r\nclass Scanner extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      delay: 100,\r\n      result: \"\",\r\n    }\r\n \r\n    this.handleScan = this.handleScan.bind(this)\r\n  }\r\n\r\n  handleScan(data){\r\n    this.setState({\r\n      result: data,\r\n    })\r\n  }\r\n  handleError(err){\r\n    console.error(err)\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    if (Number.isInteger(parseInt(this.state.result))) {\r\n      this.props.secondUserAdd(this.state.result)\r\n      \r\n    }\r\n  } \r\n\r\n  render(){\r\n    const previewStyle = {\r\n      height: 240,\r\n      width: 320,\r\n    }\r\n \r\n    return(\r\n      <div>\r\n        <QrReader\r\n          delay={this.state.delay}\r\n          style={previewStyle}\r\n          onError={this.handleError}\r\n          onScan={this.handleScan}\r\n          facingMode={\"rear\"}\r\n          />\r\n        <h2>{this.state.result}</h2>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Scanner)","import { Route, Redirect } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport Home from \"./home/Home\";\r\nimport TopArtists from \"./playlist/TopArtists\";\r\nimport Login from \"./authentication/Login\";\r\nimport API from \"../modules/APIManager\";\r\nimport \"./applicationviews.css\";\r\nimport Shared from \"./share/Shared\"\r\nimport Weather from \"./weather/Weather\"\r\nimport { withRouter } from 'react-router'\r\n\r\nclass ApplicationViews extends Component {\r\n  state = {\r\n    isLoggedIn: false,\r\n    allUsers: [],\r\n    currentUser: [],\r\n    userId: [],\r\n    secondUser: \"\"\r\n  };\r\n\r\n  isAuthenticated = () => sessionStorage.getItem(\"access_token\") !== null;\r\n\r\n  componentDidMount() {\r\n    const username = sessionStorage.getItem(\"username\");\r\n    const userId = sessionStorage.getItem(\"userId\");\r\n    if (username) {\r\n      this.setState({\r\n        currentUser: username,\r\n        isLoggedIn: true,\r\n        userId: userId\r\n      });\r\n    }\r\n    if (!this.state.isLoggedIn) {\r\n      API.get.JSONUsers().then(userArray => {\r\n        this.setState({ allUsers: userArray });\r\n      });\r\n    }\r\n  }\r\n\r\n  secondUserAdd = (id) => {\r\n    this.setState({secondUser: id})\r\n    this.props.history.push(\"/shared\")\r\n  }\r\n\r\n\r\n\r\n  authenticateUser = () => {\r\n    window.OAuth.initialize(\"rKtNmq0HtvZws6tMLOJFcXiyypo\");\r\n\r\n    window.OAuth.popup(\"spotify\", { cache: true }).done(spotify => {\r\n      sessionStorage.setItem(\"access_token\", spotify.access_token);\r\n      // do some stuff with result\r\n      spotify.me().then(data => {\r\n        sessionStorage.setItem(\"username\", data.name);\r\n        sessionStorage.setItem(\"spotifyId\", data.id);\r\n\r\n        this.setState({ currentUser: data.name, isLoggedIn: true });\r\n        const registeredUser = this.state.allUsers.find(\r\n          user => user.username === data.name\r\n        );\r\n        if (registeredUser) {\r\n          this.setState({ userId: registeredUser.id });\r\n          sessionStorage.setItem(\"userId\", registeredUser.id);\r\n        } \r\n        else {\r\n          API.get.spotifyTopArtists(spotify.access_token)\r\n          .then(array => {\r\n            const userList = {\r\n              artistDetail: array,\r\n              username: this.state.currentUser\r\n            };\r\n            API.post.toJSONServer(\"Spotify\", userList)\r\n            .then(() => {\r\n              API.get.JSONUsers().then(userArray => {\r\n                const registeredUser = userArray.find(\r\n                  user => user.username === this.state.currentUser\r\n                )\r\n                sessionStorage.setItem(\"userId\", registeredUser.id)\r\n                this.setState({ userId: registeredUser.id });\r\n              })})})}})})}\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={props => {\r\n            if (!this.isAuthenticated()) {\r\n              return <Redirect to=\"/login\" />;\r\n            } else {\r\n              return <Redirect to=\"/home\" />;\r\n            }\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/home\"\r\n          render={() => {\r\n            return <Home currentUser={this.state.currentUser} />;\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/login\"\r\n          render={() => {\r\n            return <Login authenticateUser={this.authenticateUser} />;\r\n          }}\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path=\"/topartists\"\r\n          render={() => {\r\n            if (!this.isAuthenticated()) {\r\n              return <Redirect to=\"/login\" />;\r\n            } else {\r\n              return <TopArtists userId={this.state.userId} />;\r\n            }\r\n          }}\r\n        />\r\n                <Route\r\n          exact\r\n          path=\"/weather\"\r\n          render={() => {\r\n            if (!this.isAuthenticated()) {\r\n              return <Redirect to=\"/login\" />;\r\n            } else {\r\n              return <Weather userId={this.state.userId} secondUserAdd={this.secondUserAdd}/>;\r\n            }\r\n          }}\r\n        />\r\n           <Route\r\n          exact\r\n          path=\"/shared\"\r\n          render={() => {\r\n            if (!this.isAuthenticated()) {\r\n              return <Redirect to=\"/login\" />;\r\n            } else {\r\n              return <Shared userId={this.state.userId} secondUser={this.state.secondUser}/>;\r\n            }\r\n          }}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ApplicationViews)","import React, { Component } from \"react\"\r\nimport NavBar from \"./components/nav/NavBar\"\r\nimport ApplicationViews from \"./components/ApplicationViews\"\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <NavBar />\r\n                <ApplicationViews />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./index.css\"\n\n\nReactDOM.render(\n  <Router>\n      <App />\n  </Router>\n  , document.getElementById('root'))"],"sourceRoot":""}