{"version":3,"sources":["components/nav/NavBar.js","components/home/Home.js","modules/APIManager.js","components/artists/ArtistCard.js","components/playlist/TopArtists.js","components/authentication/Login.js","components/artists/PlaylistCard.js","components/share/Shared.js","components/weather/Weather.js","components/ApplicationViews.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","state","value","isOpen","handleChange","event","_this","setState","target","handleSubmit","sessionStorage","clear","toggle","react_default","a","createElement","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","NavbarToggler","onClick","this","Collapse","navbar","Nav","NavItem","NavLink","Component","Home","Container","props","currentUser","baseURL","APIManager","get","spotifyTopArtists","access_token","fetch","concat","headers","Accept","Authorization","Content-Type","then","res","json","page","items","map","artist","id","join","spotifyArtistsInfo","uri","JSONArtistDetail","user","userObject","artists","artistDetail","JSONArtistList","userId","artistList","split","JSONUsers","post","toJSONServer","endpoint","objectToPost","method","body","JSON","stringify","e","ArtistCard","popoverOpen","tweener","className","artistId","src","image","alt","Button","slice","type","name","TopArtists","_this2","getItem","API","array","ArtistCard_ArtistCard","key","Login","oauthScript","document","appendChild","preventDefault","authenticateUser","history","push","handleClick","bind","size","bg-color","withRouter","PlaylistCard","removeArtist","Col","Shared","active","second","shared","onlyActive","onlySecond","playlist","sharedArtists","filter","find","art","length","parentNode","classList","add","previousSibling","divStyler","styler","artistObject","artObject","setTimeout","tween","from","x","y","rotate","duration","ease","easing","backOut","flip","start","set","console","log","newState","secondUser","_this3","Row","PlaylistCard_PlaylistCard","Scanner","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","delay","result","handleScan","assertThisInitialized","data","err","error","secondUserAdd","lib_default","style","height","width","onError","handleError","onScan","ApplicationViews","isLoggedIn","allUsers","isAuthenticated","window","OAuth","initialize","popup","cache","done","spotify","setItem","me","registeredUser","username","string","userList","postData","images","url","artistArray","parseInt","userArray","Fragment","react_router","exact","path","render","Home_Home","authentication_Login","TopArtists_TopArtists","Weather_Scanner","Shared_Shared","App","components_nav_NavBar","ApplicationViews_ApplicationViews","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","URL","process","href","origin","addEventListener","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","ReactDOM","react_router_dom","src_App","getElementById"],"mappings":"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","file":"static/js/main.5d640f29.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport \"./NavBar.css\"\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink\r\n} from 'reactstrap';\r\n\r\nclass NavBar extends Component {\r\n  state = {\r\n      value: [],\r\n      isOpen: false\r\n   }\r\n\r\n     handleChange = (event) => {\r\n       this.setState({value: event.target.value});\r\n     }\r\n\r\n     handleSubmit = (event) => {\r\n       sessionStorage.clear();   \r\n     }\r\n    \r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n\r\n   render() {\r\n       return (\r\n        <div>\r\n           <Navbar color=\"#464EA3\" dark expand=\"md\">\r\n               <NavbarBrand tag={Link} to=\"/\">Common Ground</NavbarBrand>\r\n               <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n          <Nav navbar>\r\n          <NavItem>\r\n                <NavLink tag={Link} to=\"/\">Home</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/topartists\">Top Artists</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/shared\">Share</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink tag={Link} to=\"/weather\">Weather</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                   <NavLink onClick={this.handleSubmit} tag={Link} to=\"/login\">Log Out</NavLink>\r\n              </NavItem>\r\n               </Nav>\r\n               </Collapse>\r\n           </Navbar>\r\n           </div>\r\n       )\r\n   }\r\n}\r\n\r\nexport default NavBar","import React, { Component } from \"react\";\r\nimport \"./home.css\";\r\nimport {\r\n  Container\r\n} from \"reactstrap\";\r\n// import API from \"../../modules/APIManager\"\r\n\r\n\r\n\r\nexport default class Home extends Component {\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n  render() {\r\n    return <Container>\r\n    <h1>Hello {this.props.currentUser}</h1>\r\n    </Container>;\r\n  }\r\n}\r\n","// const accessToken = window.sessionStorage.getItem(\"access_token\");\r\n\r\nconst remoteURL = \"https://api.spotify.com/v1\";\r\nconst baseURL = \"https://calm-mesa-57338.herokuapp.com\";\r\n\r\n// const spotifyHeaders = {\r\n//   headers: {\r\n//     Accept: \"application/json\",\r\n//     Authorization: `Bearer ${accessToken}`,\r\n//     \"Content-Type\": \"application/json\"\r\n//   }\r\n// }\r\n\r\nexport default {\r\n  get: {\r\n    spotifyTopArtists(access_token) {\r\n      return fetch(\r\n        `${remoteURL}/me/top/artists?time_range=medium_term&limit=50`,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${access_token}`,\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        }\r\n      )\r\n        .then(res => res.json())\r\n        .then(page => {\r\n          let artists = page.items;\r\n          const artistArray = artists.map(artist => {\r\n            return artist.id;\r\n          });\r\n          return artistArray.join();\r\n        });\r\n    },\r\n    spotifyArtistsInfo(uri, access_token) {\r\n      return fetch(`https://api.spotify.com/v1/artists?ids=${uri}`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${access_token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }).then(res => res.json());\r\n    },\r\n    JSONArtistDetail(user) {\r\n      return fetch(`${baseURL}/users/${user}/?_embed=artists`)\r\n        .then(res => res.json())\r\n        .then(userObject => userObject.artists[0].artistDetail);\r\n    },\r\n    JSONArtistList(userId) {\r\n      return fetch(`${baseURL}/users/${userId}`)\r\n        .then(res => res.json()).then(userObject => userObject.artistList.split(\",\"))\r\n      },\r\n\r\n    JSONUsers() {\r\n      return fetch(`${baseURL}/users`).then(res => res.json());\r\n    }\r\n  },\r\n  post: {\r\n    toJSONServer(endpoint, objectToPost) {\r\n      return fetch(`${baseURL}/${endpoint}`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(objectToPost),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }).then(e => e.json());\r\n    }\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n// import { easing, tween, styler } from \"popmotion\"\r\n\r\nexport default class ArtistCard extends Component {\r\n  state = {\r\n    popoverOpen: false\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      popoverOpen: !this.state.popoverOpen\r\n    });\r\n  }\r\n  handleSubmit = (event) => {\r\n    this.props.tweener(event)\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\" id={this.props.artist.artistId}>\r\n        <div className=\"card-body\">\r\n          <img\r\n            src={this.props.artist.image}\r\n            className=\"card-img\"\r\n            alt=\"Artist\"\r\n          />\r\n            <Button onClick={this.handleSubmit}\r\n              id={\"a\" + this.props.artist.artistId.slice(0, 5)}\r\n              type=\"button\"\r\n            >\r\n              {this.props.artist.name}\r\n            </Button>\r\n\r\n          {/* <Popover className=\"lg\"\r\n            placement=\"bottom\"\r\n            isOpen={this.state.popoverOpen}\r\n            target={\"a\" + this.props.artist.artistId.slice(0, 5)}\r\n            toggle={this.toggle}\r\n          >\r\n            <PopoverHeader>{this.props.artist.name}</PopoverHeader>\r\n            <PopoverBody>Hello</PopoverBody>\r\n          </Popover> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./playlist.css\";\r\nimport { Container } from \"reactstrap\";\r\nimport API from \"../../modules/APIManager\";\r\nimport ArtistCard from \"../artists/ArtistCard\";\r\n\r\n\r\nexport default class TopArtists extends Component {\r\n  state = {\r\n    artists: []\r\n  };\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    const userId = sessionStorage.getItem(\"userId\");\r\n\r\n    API.get.JSONArtistDetail(userId)\r\n      .then(array => this.setState({ artists: array }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"topArtists\">\r\n        <h1>Top Artists</h1>\r\n        {this.state.artists.map(artist => (\r\n          <ArtistCard key={artist.artistId} artist={artist} />\r\n        ))}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router'\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport { Button, Container } from 'reactstrap';\r\nimport \"./login.css\"\r\n// import API from \"../../modules/APIManager\"\r\n\r\nclass Login extends Component {\r\n\r\n  // Downloads oauth.js from CDN, pretty much like adding external scripts\r\n  componentDidMount () {\r\n    const oauthScript = document.createElement(\"script\");\r\n    oauthScript.src = \"https://cdn.rawgit.com/oauth-io/oauth-js/c5af4519/dist/oauth.js\";\r\n\r\n    document.body.appendChild(oauthScript);\r\n  \r\n  }\r\n\r\n  handleClick(e) {\r\n    // Prevents page reload\r\n    e.preventDefault();\r\n\r\n    // Initializes OAuth.io with API key\r\n    this.props.authenticateUser()\r\n\r\n\r\n      this.props.history.push(\"/home\")\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n    <Container>\r\n    \r\n    <h1>Welcome to Common Ground</h1>\r\n    <h3>Please log in to continue</h3>\r\n    <Button onClick={this.handleClick.bind(this)} size=\"lg\" bg-color=\"#E3E0DA\" >\r\n             <span className=\"fa fa-spotify\"></span> Sign in with Spotify\r\n           </Button>\r\n           </Container>\r\n    )}\r\n}\r\n\r\nexport default withRouter(Login)","import React, { Component } from \"react\";\r\nimport { Col, Button } from \"reactstrap\";\r\n\r\nexport default class PlaylistCard extends Component {\r\n\r\n  handleClick = (event) => {\r\n    this.props.removeArtist(event)\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Col className=\"animated fadeIn flip-card\">\r\n        <div className=\"flip-card-inner\" >\r\n          <div className=\"flip-card-front\">\r\n          <img  className= \"flip-image\" src={this.props.artist.image} alt=\"artist\"></img>\r\n          </div>\r\n          <div className=\"flip-card-back\">\r\n          <h2>{this.props.artist.name}</h2> \r\n          <Button id={this.props.artist.artistId} onClick={this.handleClick}>Remove Artist</Button>\r\n        </div>\r\n      </div>\r\n    </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./shared.css\";\r\nimport { Button, Row, Container } from \"reactstrap\";\r\nimport API from \"../../modules/APIManager\";\r\nimport ArtistCard from \"../artists/ArtistCard\";\r\nimport { easing, tween, styler } from \"popmotion\";\r\nimport PlaylistCard from \"../artists/PlaylistCard\";\r\n\r\nexport default class Shared extends Component {\r\n  state = {\r\n    active: [],\r\n    second: [],\r\n    shared: [],\r\n    onlyActive: [],\r\n    onlySecond: [],\r\n    playlist: []\r\n  };\r\n\r\n  sharedArtists = () => {\r\n    const active = this.state.active;\r\n    const second = this.state.second;\r\n    const shared = active.filter(artist =>\r\n      second.find(art => art.artistId === artist.artistId)\r\n    );\r\n\r\n    const onlyActive = active.filter(\r\n      artist => !second.find(art => art.artistId === artist.artistId)\r\n    );\r\n    const onlySecond = second.filter(\r\n      artist => !active.find(art => art.artistId === artist.artistId)\r\n    );\r\n    this.setState({\r\n      shared: shared,\r\n      onlyActive: onlyActive,\r\n      onlySecond: onlySecond\r\n    });\r\n  };\r\n\r\n  tweener = event => {\r\n    if (this.state.playlist.length < 5) {\r\n    const target = event.target.parentNode.parentNode;\r\n    target.classList.add(\"outFront\");\r\n    let image = event.target.previousSibling;\r\n    const divStyler = styler(image);\r\n    const allArtists = this.state.active.concat(this.state.onlySecond)\r\n    const artistObject = allArtists.find(\r\n      artObject => artObject.artistId === target.id\r\n    );  \r\n    this.setState({ playlist: this.state.playlist.concat(artistObject) });\r\n    setTimeout(function(){ target.classList.add(\"display-none\")}, 2600);\r\n    image.classList.add(\"outFront\");\r\n    tween({\r\n      from: 0,\r\n      to: { x: -1100, y: -1100, rotate: 180 },\r\n      duration: 2000,\r\n      ease: easing.backOut,\r\n      flip: 2\r\n      // elapsed: 500,\r\n      // loop: 1,\r\n      // yoyo: 1\r\n    }).start(divStyler.set);\r\n  }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const userId = sessionStorage.getItem(\"userId\");\r\n\r\n    API.get\r\n      .JSONArtistDetail(userId)\r\n      .then(array => this.setState({ active: array }));\r\n    API.get.JSONArtistDetail(this.props.secondUser).then(array => this.setState({ second: array }));\r\n  }\r\n\r\n  removeArtist = (event) => {\r\n    const target = event.target.id;\r\n    console.log(target);\r\n    const newState = this.state.playlist.filter(artistObject => {\r\n      return artistObject.artistId !== target\r\n    }); this.setState({playlist: newState})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"shared\">\r\n        <h1>Shared Artists</h1>\r\n        <Button onClick={this.sharedArtists}>Click to make Magic</Button>\r\n        \r\n        <Row className=\"playlist\">\r\n          {this.state.playlist.map(artist => (\r\n             <PlaylistCard\r\n                key={artist.artistId}\r\n                artist={artist}\r\n                removeArtist={this.removeArtist}\r\n              />\r\n            ))}\r\n          </Row>\r\n         \r\n        <div className=\"fixer\">\r\n          <div className=\"container left\">\r\n            {this.state.onlyActive.map(artist => (\r\n              <ArtistCard\r\n                key={artist.artistId}\r\n                artist={artist}\r\n                tweener={this.tweener}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"container center\">\r\n            {this.state.shared.map(artist => (\r\n              <ArtistCard\r\n                key={artist.artistId}\r\n                artist={artist}\r\n                tweener={this.tweener}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"container right\">\r\n            {this.state.onlySecond.map(artist => (\r\n              <ArtistCard\r\n                key={artist.artistId}\r\n                artist={artist}\r\n                tweener={this.tweener}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport QrReader from 'react-qr-scanner'\r\n \r\nexport default class Scanner extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      delay: 100,\r\n      result: \"\",\r\n    }\r\n \r\n    this.handleScan = this.handleScan.bind(this)\r\n  }\r\n\r\n  handleScan(data){\r\n    this.setState({\r\n      result: data,\r\n    })\r\n  }\r\n  handleError(err){\r\n    console.error(err)\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (!this.state.result === \"\") {\r\n      this.props.secondUserAdd(this.state.result)\r\n    }\r\n  } \r\n\r\n  render(){\r\n    const previewStyle = {\r\n      height: 240,\r\n      width: 320,\r\n    }\r\n \r\n    return(\r\n      <div>\r\n        <QrReader\r\n          delay={this.state.delay}\r\n          style={previewStyle}\r\n          onError={this.handleError}\r\n          onScan={this.handleScan}\r\n\r\n          />\r\n        <h2>{this.state.result}</h2>\r\n      </div>\r\n    )\r\n  }\r\n}","import { Route, Redirect } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport Home from \"./home/Home\";\r\nimport TopArtists from \"./playlist/TopArtists\";\r\nimport Login from \"./authentication/Login\";\r\nimport API from \"../modules/APIManager\";\r\nimport \"./applicationviews.css\";\r\nimport Shared from \"./share/Shared\"\r\nimport Weather from \"./weather/Weather\"\r\n\r\n\r\nexport default class ApplicationViews extends Component {\r\n  state = {\r\n    isLoggedIn: false,\r\n    allUsers: [],\r\n    currentUser: [],\r\n    userId: [],\r\n    secondUser: \"\"\r\n  };\r\n\r\n  isAuthenticated = () => sessionStorage.getItem(\"access_token\") !== null;\r\n\r\n  componentDidMount() {\r\n    const username = sessionStorage.getItem(\"username\");\r\n    const userId = sessionStorage.getItem(\"userId\");\r\n    if (username) {\r\n      this.setState({\r\n        currentUser: username,\r\n        isLoggedIn: true,\r\n        userId: userId\r\n      });\r\n    }\r\n    if (!this.state.isLoggedIn) {\r\n      API.get.JSONUsers().then(userArray => {\r\n        this.setState({ allUsers: userArray });\r\n      });\r\n    }\r\n  }\r\n\r\n  secondUserAdd = (id) => {\r\n    this.setState({secondUser: id})\r\n    this.props.history.push(\"/shared\")\r\n  }\r\n\r\n\r\n\r\n  authenticateUser = () => {\r\n    window.OAuth.initialize(\"rKtNmq0HtvZws6tMLOJFcXiyypo\");\r\n\r\n    window.OAuth.popup(\"spotify\", { cache: true }).done(spotify => {\r\n      sessionStorage.setItem(\"access_token\", spotify.access_token);\r\n      // do some stuff with result\r\n      spotify.me().then(data => {\r\n        sessionStorage.setItem(\"username\", data.name);\r\n\r\n        this.setState({ currentUser: data.name, isLoggedIn: true });\r\n        const registeredUser = this.state.allUsers.find(\r\n          user => user.username === data.name\r\n        );\r\n        if (registeredUser) {\r\n          this.setState({ userId: registeredUser.id });\r\n          sessionStorage.setItem(\"userId\", registeredUser.id);\r\n        } else {\r\n          API.get.spotifyTopArtists(spotify.access_token)\r\n          .then(string => {\r\n            const userList = {\r\n              artistList: string,\r\n              username: this.state.currentUser\r\n            };\r\n            API.post.toJSONServer(\"users\", userList)\r\n            .then(postData => {\r\n                this.setState({ userId: postData.id });\r\n                sessionStorage.setItem(\"userId\", postData.id);\r\n                return postData});\r\n                return userList\r\n              }) \r\n                .then(postData => {\r\n                API.get.spotifyArtistsInfo(postData.artistList, spotify.access_token)\r\n                .then(page => {\r\n                  let artists = page.artists;\r\n                  const artistDetailObject = artists.map(artist => {\r\n                    return {\r\n                      name: artist.name,\r\n                      artistId: artist.id,\r\n                      image: artist.images[1].url\r\n                    };\r\n                  });\r\n                  return artistDetailObject;\r\n                }).then(artistArray => {\r\n                  let artistObject = {\r\n                    userId: parseInt(sessionStorage.getItem(\"userId\")),\r\n                    artistDetail: artistArray\r\n                  }\r\n              API.post.toJSONServer(\"artists\", artistObject)\r\n            })\r\n          })\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={props => {\r\n            if (!this.isAuthenticated()) {\r\n              return <Redirect to=\"/login\" />;\r\n            } else {\r\n              return <Redirect to=\"/home\" />;\r\n            }\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/home\"\r\n          render={() => {\r\n            return <Home currentUser={this.state.currentUser} />;\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/login\"\r\n          render={() => {\r\n            return <Login authenticateUser={this.authenticateUser} />;\r\n          }}\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path=\"/topartists\"\r\n          render={() => {\r\n            if (!this.isAuthenticated()) {\r\n              return <Redirect to=\"/login\" />;\r\n            } else {\r\n              return <TopArtists userId={this.state.userId} />;\r\n            }\r\n          }}\r\n        />\r\n                <Route\r\n          exact\r\n          path=\"/weather\"\r\n          render={() => {\r\n            if (!this.isAuthenticated()) {\r\n              return <Redirect to=\"/login\" />;\r\n            } else {\r\n              return <Weather userId={this.state.userId} secondUserAdd={this.secondUserAdd}/>;\r\n            }\r\n          }}\r\n        />\r\n           <Route\r\n          exact\r\n          path=\"/shared\"\r\n          render={() => {\r\n            if (!this.isAuthenticated()) {\r\n              return <Redirect to=\"/login\" />;\r\n            } else {\r\n              return <Shared userId={this.state.userId} secondUser={this.state.secondUser}/>;\r\n            }\r\n          }}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\nimport NavBar from \"./components/nav/NavBar\"\nimport ApplicationViews from \"./components/ApplicationViews\"\n\n\n\nclass App extends Component {\n\n    // state = {\n    //     filtered: {\n    //         owners: [],\n    //         employees: [],\n    //         locations: [],\n    //         animals: []\n    //     }\n    // }; \n\n    \n    // searchButton = (search) => {\n\n    //     const newSearchState = {\n    //         filtered: {\n    \n    //         }\n    //     }\n        \n    //     fetch(`http://localhost:5002/owners/?q=${search}`)\n    //         .then(r => r.json())\n    //         .then(owners => newSearchState.filtered.owners = owners)\n    //         .then(() => fetch(`http://localhost:5002/employees/?q=${search}`)\n    //         .then(r => r.json()))\n    //         .then(employees => newSearchState.filtered.employees = employees)\n    //         .then(() => fetch(`http://localhost:5002/animals/?q=${search}`)\n    //         .then(r => r.json()))\n    //         .then(animals => newSearchState.filtered.animals = animals)\n    //         .then(() => fetch(`http://localhost:5002/locations/?q=${search}`)\n    //         .then(r => r.json()))\n    //         .then(locations => newSearchState.filtered.locations = locations)\n    //         .then(() => {\n            \n    //             this.setState(newSearchState)})\n    // }\n    \n    render() {\n        return (\n            <React.Fragment>\n                <NavBar />\n                <ApplicationViews />\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport { register } from \"./serviceWorker\"\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport './index.css';\n\nregister()\n\nReactDOM.render(\n  <Router>\n      <App />\n  </Router>\n  , document.getElementById('root'))"],"sourceRoot":""}